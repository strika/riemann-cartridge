#!/bin/bash

function start() {
  source $RBENV_INIT

  echo "Starting Riemann"
  cd ${OPENSHIFT_REPO_DIR}
  nohup ${OPENSHIFT_RIEMANN_DIR}/riemann/bin/riemann riemann.config > ${OPENSHIFT_LOG_DIR}/riemann.log 2>&1 &
  echo $! > ${OPENSHIFT_RIEMANN_DIR}/riemann.pid
  return 0
}

function stop() {
  pid=`cat ${OPENSHIFT_RIEMANN_DIR}/riemann.pid`
  kill -0 $pid && kill -15 $pid
  return 0
}

function status(){
  pid=`cat ${OPENSHIFT_RIEMANN_DIR}/riemann.pid`
  return `kill -0 $pid`
}

function restart(){
  stop
  start
  return 0
}

function update() {
  # Install rbenv:

  echo "Installing rbenv..."
  git clone https://github.com/sstephenson/rbenv.git $RBENV_ROOT
  echo "Done."

  # Install plugins:
  PLUGINS=(
    sstephenson/ruby-build
  )

  echo "Installing plugins..."
  for plugin in ${PLUGINS[@]} ; do

    KEY=${plugin%%/*}
    VALUE=${plugin#*/}

    RBENV_PLUGIN_ROOT="${RBENV_ROOT}/plugins/$VALUE"
    if [ ! -d "$RBENV_PLUGIN_ROOT" ] ; then
      git clone https://github.com/$KEY/$VALUE.git $RBENV_PLUGIN_ROOT
    else
      cd $RBENV_PLUGIN_ROOT
      echo "Pulling $VALUE updates."
      git pull
    fi

  done
  echo "Done."

  echo "gem: --no-rdoc --no-ri" > ${OPENSHIFT_DATA_DIR}.gemrc

  echo '
  if [ -d "${RBENV_ROOT}" ]; then
    eval "$(rbenv init -)"
  fi

  alias gem="gem --config-file ${OPENSHIFT_DATA_DIR}.gemrc"
  ' > $RBENV_INIT

  source $RBENV_INIT

  rbenv install $OPENSHIFT_RUBY_VERSION
  rbenv global $OPENSHIFT_RUBY_VERSION

  gem install bundler

  echo "Installing Riemann..."

  wget http://aphyr.com/riemann/riemann-0.2.6.tar.bz2
  tar xvfj riemann-0.2.6.tar.bz2
  mv riemann-0.2.6 riemann

  echo "Done".

  return 0
}

function tidy() {
  return 0
}

# Not used

function build() {
  return 0
}

function pre-build(){
  return 0
}

function post-deploy(){
  return 0
}

# Help

if ! [ $# -gt 0 ]; then
  echo "Usage: $0 [start|restart|graceful|graceful-stop|stop|status|update]"
  exit 1
fi

# Logic

case "$1" in
  start) start ;;
  restart|graceful) restart ;;
  graceful-stop|stop) stop ;;
  status) status ;;
  build) build ;;
  pre-build) pre-build ;;
  post-deploy) post-deploy ;;
  tidy) tidy ;;
  update) update ;;
  *)
esac
