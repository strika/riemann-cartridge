; -*- mode: clojure; -*-
; vim: filetype=clojure

(logging/init {:console true})

; Listen on the local interface over TCP ($OPENSHIFT_RIEMANN_TCP_PORT),
; UDP ($OPENSHIFT_RIEMANN_TCP_PORT), and websockets
; ($OPENSHIFT_RIEMANN_WS_PORT)
(let [host     (System/getenv "OPENSHIFT_RIEMANN_HOST")
      tcp-port (System/getenv "OPENSHIFT_RIEMANN_TCP_PORT")
      ws-port  (System/getenv "OPENSHIFT_RIEMANN_WS_PORT")]
  (tcp-server {:host host :port tcp-port})
  (udp-server {:host host :port tcp-port})
  (ws-server  {:host host :port ws-port}))

; Expire old events from the index every 5 seconds.
(periodically-expire 5)

(let [index (index)]
  ; Inbound events will be passed to these streams:
  (streams
    (default :ttl 60
      ; Index all events immediately.
      index

      ; Log expired events.
      (expired
        (fn [event] (info "expired" event))))))
